package tictactoegaming;

import java.util.Scanner;

public class TicTacGameWithPlayer {

	public static void playGameWithPlayer2() {

		System.out.println("You will play with another User");
		Scanner scanner = new Scanner(System.in);

		char[][] tictac = { { ' ', ' ', ' ' }, { ' ', ' ', ' ' }, { ' ', ' ', ' ' } };
		System.out.println("This is how the grid looks like:");
		GameHelper.printGrid(tictac);

		while (true) {
			player1Turn(tictac, scanner);
			if (GameHelper.isGameFinished(tictac)) {
				break;
			}
			GameHelper.printGrid(tictac);

			player2Turn(tictac, scanner);
			if (GameHelper.isGameFinished(tictac)) {
				break;
			}
			GameHelper.printGrid(tictac);
		}
		scanner.close();
	}

	private static void player1Turn(char[][] board, Scanner scanner) {
		String userInput;
		while (true) {
			System.out.println("Where would you like to play? (1-9)");
			userInput = scanner.nextLine();
			if (isValidPosition(board, userInput)) {
				break;
			} else {
				System.out.println(userInput + " is not a valid move.");
			}
		}
		GameHelper.placeSymbol(board, userInput, 'X');
	}

	private static boolean isValidPosition(char[][] board, String position) {
		switch (position) {
		case "1":
			return (board[0][0] == ' ');
		case "2":
			return (board[0][1] == ' ');
		case "3":
			return (board[0][2] == ' ');
		case "4":
			return (board[1][0] == ' ');
		case "5":
			return (board[1][1] == ' ');
		case "6":
			return (board[1][2] == ' ');
		case "7":
			return (board[2][0] == ' ');
		case "8":
			return (board[2][1] == ' ');
		case "9":
			return (board[2][2] == ' ');
		default:
			return false;
		}
	}

	private static void player2Turn(char[][] tictac, Scanner scanner) {

		String userInput;
		while (true) {
			System.out.println("Where would you like to play player2? (1-9)");
			userInput = scanner.nextLine();
			if (isValidPosition(tictac, userInput)) {
				break;
			}
		}
		System.out.println("Player2 chose " + userInput);
		GameHelper.placeSymbol(tictac, userInput, 'O');

	}

}
