package tictactoegaming;

import java.util.Random;
import java.util.Scanner;

public class TicTacGameWithComputer {

	public static void playGameWithComputer() {

		System.out.println("You will play with the Computer");

		Scanner scanner = new Scanner(System.in);

		char[][] tictac = { { ' ', ' ', ' ' }, { ' ', ' ', ' ' }, { ' ', ' ', ' ' } };
		System.out.println("This is how the grid looks like:");
		GameHelper.printGrid(tictac);

		while (true) {
			player1Turn(tictac, scanner);
			if (isGameFinished(tictac)) {
				break;
			}
			GameHelper.printGrid(tictac);

			computerTurn(tictac);
			if (isGameFinished(tictac)) {
				break;
			}
			GameHelper.printGrid(tictac);
		}
		scanner.close();
	}

	private static void player1Turn(char[][] board, Scanner scanner) {
		String userInput;
		while (true) {

			System.out.println("Where would you like to play? (1-9)");
			userInput = scanner.nextLine();
			if (GameHelper.isValidPosition(board, userInput)) {
				break;
			} else {
				System.out.println(userInput + " is not a valid move.");
			}
		}
		GameHelper.placeSymbol(board, userInput, 'X');
	}

	

	private static boolean isGameFinished(char[][] board) {

		if (whoWon(board, 'X')) {
			GameHelper.printGrid(board);
			System.out.println("You win!");
			return true;
		}

		if (whoWon(board, 'O')) {
			GameHelper.printGrid(board);
			System.out.println("Computer wins!");
			return true;
		}

		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[i].length; j++) {
				if (board[i][j] == ' ') {
					return false;
				}
			}
		}
		GameHelper.printGrid(board);
		System.out.println("The game ended in a tie!");
		return true;
	}

	private static boolean whoWon(char[][] board, char symbol) {
		if ((board[0][0] == symbol && board[0][1] == symbol && board[0][2] == symbol)
				|| (board[1][0] == symbol && board[1][1] == symbol && board[1][2] == symbol)
				|| (board[2][0] == symbol && board[2][1] == symbol && board[2][2] == symbol) ||

		(board[0][0] == symbol && board[1][0] == symbol && board[2][0] == symbol)
				|| (board[0][1] == symbol && board[1][1] == symbol && board[2][1] == symbol)
				|| (board[0][2] == symbol && board[1][2] == symbol && board[2][2] == symbol) ||

		(board[0][0] == symbol && board[1][1] == symbol && board[2][2] == symbol)
				|| (board[0][2] == symbol && board[1][1] == symbol && board[2][0] == symbol)) {
			return true;
		}
		return false;
	}

	private static void computerTurn(char[][] board) {
		Random rand = new Random();
		int computerMove;
		while (true) {
			computerMove = rand.nextInt(9) + 1;
			if (GameHelper.isValidPosition(board, Integer.toString(computerMove))) {
				break;
			}
		}
		System.out.println("Computer chose " + computerMove);
		GameHelper.placeSymbol(board, Integer.toString(computerMove), 'O');
	}

}
