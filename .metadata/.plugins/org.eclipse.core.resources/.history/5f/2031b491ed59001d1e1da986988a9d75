package tictactoegaming;

public class GameHelper {

	public static void printGrid(char[][] tictac) {
		System.out.println(tictac[0][0] + "|" + tictac[0][1] + "|" + tictac[0][2]);
		System.out.println("--" + "--" + "-");
		System.out.println(tictac[1][0] + "|" + tictac[1][1] + "|" + tictac[1][2]);
		System.out.println("--" + "--" + "-");
		System.out.println(tictac[2][0] + "|" + tictac[2][1] + "|" + tictac[2][2]);
		System.out.println("--" + "--" + "-");

	}
	
	public static void placeSymbol(char[][] tictac, String position, char symbol) {
		switch (position) {
		case "1":
			tictac[0][0] = symbol;
			break;
		case "2":
			tictac[0][1] = symbol;
			break;
		case "3":
			tictac[0][2] = symbol;
			break;
		case "4":
			tictac[1][0] = symbol;
			break;
		case "5":
			tictac[1][1] = symbol;
			break;
		case "6":
			tictac[1][2] = symbol;
			break;
		case "7":
			tictac[2][0] = symbol;
			break;
		case "8":
			tictac[2][1] = symbol;
			break;
		case "9":
			tictac[2][2] = symbol;
			break;
		default:
			System.out.println(":(");
		}
	}
	
	public static boolean isValidPosition(char[][] tictac, String position) {
		switch (position) {
		case "1":
			return (tictac[0][0] == ' ');
		case "2":
			return (tictac[0][1] == ' ');
		case "3":
			return (tictac[0][2] == ' ');
		case "4":
			return (tictac[1][0] == ' ');
		case "5":
			return (tictac[1][1] == ' ');
		case "6":
			return (tictac[1][2] == ' ');
		case "7":
			return (tictac[2][0] == ' ');
		case "8":
			return (tictac[2][1] == ' ');
		case "9":
			return (tictac[2][2] == ' ');
		default:
			return false;
		}
	}
	
	public static boolean isGameFinished(char[][] tictac) {

		if (whoWon(tictac, 'X')) {
			GameHelper.printGrid(tictac);
			System.out.println("You win!");
			return true;
		}

		if (whoWon(tictac, 'O')) {
			GameHelper.printGrid(tictac);
			System.out.println("Computer wins!");
			return true;
		}

		for (int i = 0; i < tictac.length; i++) {
			for (int j = 0; j < tictac[i].length; j++) {
				if (tictac[i][j] == ' ') {
					return false;
				}
			}
		}
		GameHelper.printGrid(tictac);
		System.out.println("The game ended in a tie!");
		return true;
	}
	
	public static boolean whoWon(char[][] board, char symbol) {
		if ((board[0][0] == symbol && board[0][1] == symbol && board[0][2] == symbol)
				|| (board[1][0] == symbol && board[1][1] == symbol && board[1][2] == symbol)
				|| (board[2][0] == symbol && board[2][1] == symbol && board[2][2] == symbol) ||

		(board[0][0] == symbol && board[1][0] == symbol && board[2][0] == symbol)
				|| (board[0][1] == symbol && board[1][1] == symbol && board[2][1] == symbol)
				|| (board[0][2] == symbol && board[1][2] == symbol && board[2][2] == symbol) ||

		(board[0][0] == symbol && board[1][1] == symbol && board[2][2] == symbol)
				|| (board[0][2] == symbol && board[1][1] == symbol && board[2][0] == symbol)) {
			return true;
		}
		return false;
	}

}
